const arr = [1,2,3,4,5,6,7,8,9,10];

// slice(optional start(include), optional end(exclude));
// return a new array without modifing the original array/string

// splice(start, optional delete count, optional items to add)
// changes the content of string/ array by removing or replacing existing chars
// start param from where extration should start
// deleteCount param specify how many chars to be removed
// newSubstr insert new chars in place of the removed one


console.log(arr.slice(0,3)); 
//start index include, end index exclude

console.log(arr.slice(1));
// if have only one param then it will extract from the start index(include) to till end

console.log(arr.slice(-2));
// if have single param and that too -ve then it will count from end of array

console.log(arr.slice(1,-3));
// negitive end param is not supported in slice

console.log(arr.slice(6,2));
// if start param is greater than end param then it will return empty array



console.log(arr.splice(1,5,8,10)); 
// We use `splice(1, 5, 8, 10)` on the array `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`.
// It starts at index 1 and removes 5 elements (`[2, 3, 4, 5, 6]`).
// Then, it inserts `8` and `10` starting from index 1.
// The resulting array is `[1, 8, 10, 7, 8, 9, 10]`.

console.log(arr.splice(1));
// if have only one param then it will extract from the start index(include) to till end

console.log(arr.splice(-2,4));
// if have single param and that too -ve then it will count from end of array

console.log(arr.splice(1,-3));
// negitive end param is not supported in splice

console.log(arr.splice(9,1));
// if start param is greater than end param then splice will remove elements from start index to end index of array
