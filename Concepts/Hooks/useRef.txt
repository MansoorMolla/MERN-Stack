The useRef Hook allows you to persist values between renders.
It can be used to store a mutable value that does not cause a re-render when updated.
It can be used to access a DOM element directly.

Unlike useState if we change a value in useRef it will not re-render the webpage

If we tried to count how many times our application renders using the useState Hook, 
we would be caught in an infinite loop since this Hook itself causes a re-render.
To avoid this, we can use the useRef Hook.

Tracking State Changes
The useRef Hook can also be used to keep track of previous state values.
This is because we are able to persist useRef values between renders.

Reasons to use useRef hook
The main use of useRef hook is to access the DOM elements in a more efficient way as compared to simple refs. 
Since useRef hooks preserve value across various re-renders and do not cause re-renders 
whenever a value is changed they make the application faster and helps in caching and storing previous values

const refContainer = useRef(initialValue);