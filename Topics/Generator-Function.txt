### **2. Generator Function in JavaScript**  

#### **What is a Generator Function?**  
A **generator function** is a special type of function in JavaScript that can **pause execution and resume later**. Unlike normal functions that run completely when called, generator functions allow **step-by-step execution** using the `yield` keyword.

#### **How to Define a Generator Function?**  
Generator functions are declared using **`function*` (with an asterisk)**:  
```javascript
function* myGenerator() {
  yield "Step 1";
  yield "Step 2";
  yield "Step 3";
}

const gen = myGenerator();
console.log(gen.next()); // { value: "Step 1", done: false }
console.log(gen.next()); // { value: "Step 2", done: false }
console.log(gen.next()); // { value: "Step 3", done: false }
console.log(gen.next()); // { value: undefined, done: true }
```
#### **How It Works?**
1. Calling a generator function **does not execute it immediately**. Instead, it returns a **generator object**.  
2. You call `.next()` to execute **one step at a time**.  
3. The function **pauses at `yield`** and returns the value.  
4. When `next()` is called again, execution resumes from where it paused.  
5. Once all `yield` statements are done, `done: true` is returned.  

#### **Why Use Generator Functions?**  
✅ **Lazy Execution** – Code runs only when needed, saving memory.  
✅ **Handling Infinite Sequences** – Useful for generating infinite data.  
✅ **Asynchronous Operations** – Helps manage complex async code.

#### **Example: Generating Infinite Numbers**  
```javascript
function* generateNumbers() {
  let num = 1;
  while (true) {
    yield num++;
  }
}

const numbers = generateNumbers();
console.log(numbers.next().value); // 1
console.log(numbers.next().value); // 2
console.log(numbers.next().value); // 3
```

### **Key Takeaway:**  
- **Normal functions execute fully**, but **generators pause and resume**.  
- Generators use `yield` to return values **step-by-step**.  
- They are useful for **handling large datasets, asynchronous flows, and infinite sequences**.  

Let me know if you have any doubts, or should I move to the next topic?