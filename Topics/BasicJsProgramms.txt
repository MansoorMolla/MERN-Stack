// reverse a number string and array 


// const arr = [1, 2, 3, 4, 5];

// const rev = (arrToRev) => {
//     return arrToRev.reverse();
// }

// const res = rev(arr);
// console.log(res); // [5, 4, 3, 2, 1]



// const num = 12345;
// const rev = (numToRev) => {
//     return parseInt(numToRev.toString().split('').reverse().join(''))
// }

// const res = rev(num);
// console.log(res);


// const str = 'Mansoor';

// const rev = (strToRev) => {
//     return strToRev.split('').reverse().join('')
// }

// const res = rev(str);
// console.log(res);


const str = 'MaM';
const rev = (strToRev) => {
    return strToRev.split('').reverse().join('')
}

if(str === rev(str)){
    console.log('Yes its a palindrome');
}else{
    console.log('No its not a palindrome')
}


const num = 1233211;

const rev = (numToRev) => {
    return parseInt(numToRev.toString().split('').reverse().join(''))
}

if(num === rev(num)){
    console.log('Yes the number is palindrome');
}else{
    console.log('No the number is not a palindrome');
}

const arr = [1,2,3,3,2,1];
const rev = (arrToRev) => {
    return arrToRev.reverse()
}

if(JSON.stringify(arr) === JSON.stringify(rev(arr))){
    console.log('Yes the array is a palindrome');
}else{
    console.log('No the array is not a palindrome');
}


const arrayWithDuplicates = [1, 2, 2, 3, 4, 4, 5];
const uniqueArray = [...new Set(arrayWithDuplicates)];
console.log(uniqueArray); // [1, 2, 3, 4, 5]

const str = 'Mansoor';
const arr = str.split('')
const remDup = [...new Set(arr)]
const duplicatesRemovedStr = remDup.join('');
console.log(duplicatesRemovedStr);


// reverse, sort, remove duplicate


// const arr = [9,3,5,2,41,2,3]
// const sortarr = arr.sort((a,b) => a-b)
// console.log(sortarr);

// const revarr = arr.reverse();
// console.log('The rev of arr is :',revarr);

// const remdup = [...new Set(arr)] 
// console.log('The removeed dup is ',remdup);



// For the string
const name = 'Mansoor';

// Convert the string to an array of characters
let nameArr = Array.from(name);

// Sort the array
let sortedName = nameArr.sort().join('');
console.log('The sorted name is:', sortedName);

// Reverse the array
let reversedName = nameArr.reverse().join('');
console.log('The reversed name is:', reversedName);

// Remove duplicates
let uniqueName = [...new Set(nameArr)].join('');
console.log('The name with duplicates removed is:', uniqueName);

// For the number
const number = 123456;

// Convert the number to a string, then to an array of characters
let numberArr = Array.from(number.toString());

// Sort the array
let sortedNumber = numberArr.sort((a, b) => a - b).join('');
console.log('The sorted number is:', sortedNumber);

// Reverse the array
let reversedNumber = numberArr.reverse().join('');
console.log('The reversed number is:', reversedNumber);

// Remove duplicates
let uniqueNumber = [...new Set(numberArr)].join('');
console.log('The number with duplicates removed is:', uniqueNumber);



// const name = 'mansoor basha molla';
 
// const arr = name.split(' ');
// for(let i=0;i<arr.length;i++){
//     arr[i]=arr[i][0].toUpperCase()+arr[i].substring(1);
// }
// const arrb = arr.join(' ');
// console.log(arrb);

function capitalizeWords(input) {
   return input
       .split(' ') // Split the string into an array of words
       .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()) // Capitalize the first letter of each word
       .join(' '); // Join the words back into a single string
}
// Example usage
let name = "mansoor basha molla";
let capitalizedName = capitalizeWords(name);
console.log(capitalizedName); // Output: Mansoor Basha Molla



function processArray(arr) {
   // Add 10 to elements at even indices
   let updatedArray = arr.map((element, index) =>
       index % 2 === 0 ? element + 10 : element
   );
   // Remove duplicates by converting the array to a Set and back to an array
   let resultArray = [...new Set(updatedArray)];
   return resultArray;
}
// Example usage
let inputArray = [1, 2, 3, 4, 1, 2, 3, 6, 7];
let result = processArray(inputArray);
console.log(result); // Output: [11, 2, 13, 4, 17, 6, 7]


const arr = [1,2,3,4,5,1,2,3,4,5,6,7]
const remDup = arr.filter((ele,ind,tar)=>{
    return tar.indexOf(ele) === ind
})
console.log(remDup)


const arr = [1,2,3,4,5,1,2,3,4,5,6,7]
const occCount = arr.reduce((acc,ele)=>{
    acc[ele] = (acc[ele] || 0) + 1
    return acc;
},{})
console.log(occCount)

const arr = 'Mansoor'
const res = arr.split('')
const occCount = res.reduce((acc,ele)=>{
    acc[ele] = (acc[ele] || 0) + 1
    return acc;
},{})
console.log(occCount)


const findFactorial = (num) => {
    if(num === 0 || num === 1) return 1;
    return num * findFactorial(num -1)
}
console.log('Factorial of 5 is :',findFactorial(5))

const arr = [1, 2, [1, 2, 3], [4, 5, 6]]
// const falttenArray = arr.flat(Infinity)
// console.log(falttenArray)

const flattenedArray = arr.reduce((acc, ele) => {
    return acc.concat(ele);
}, []);
console.log(flattenedArray)

const flatten = (arr) => arr.reduce((acc, ele) => 
  acc.concat(Array.isArray(ele) ? flatten(ele) : ele), []);

const arr = [1, 2, [3, 4, [5, 6, [7, 8]]]];
console.log(flatten(arr));
