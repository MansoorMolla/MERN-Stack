{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SH20313140\\\\Desktop\\\\Fullstack\\\\Reactjs\\\\my-app\\\\src\\\\components\\\\ProductsContext.js\",\n  _s = $RefreshSig$();\n// ProductsContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext();\nexport const ProductsProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products from JSON Server\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []); // Run only once on component  mount\n  const addProduct = newProduct => {\n    // Add a new product to the local state\n    setProducts(prevProducts => [...prevProducts, newProduct]);\n  };\n  const value = {\n    products,\n    addProduct\n  };\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductsProvider, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductsProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","ProductsContext","ProductsProvider","children","_s","products","setProducts","fetchProducts","response","get","data","error","console","addProduct","newProduct","prevProducts","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SH20313140/Desktop/Fullstack/Reactjs/my-app/src/components/ProductsContext.js"],"sourcesContent":["// ProductsContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nexport const ProductsContext = createContext();\r\nexport const ProductsProvider = ({ children }) => {\r\n    const [products, setProducts] = useState([]);\r\n    useEffect(() => {\r\n        // Fetch products from JSON Server\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3000/products');\r\n                setProducts(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching products:', error);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []); // Run only once on component  mount\r\n    const addProduct = (newProduct) => {\r\n        // Add a new product to the local state\r\n        setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n    };\r\n    const value = {\r\n        products,\r\n        addProduct,\r\n    };\r\n    return (\r\n        <ProductsContext.Provider value={value}>{children}</ProductsContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAC9C,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC;QAClEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,MAAMM,UAAU,GAAIC,UAAU,IAAK;IAC/B;IACAR,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;EAChE,CAAC;EACD,MAAME,KAAK,GAAG;IACVX,QAAQ;IACRQ;EACJ,CAAC;EACD,oBACIb,OAAA,CAACC,eAAe,CAACgB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA2B,CAAC;AAErF,CAAC;AAACjB,EAAA,CAzBWF,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}