{"ast":null,"code":"var _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n\nimport React, { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  let [data, setData] = useState(null);\n  let [error, setError] = useState(null);\n  let [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let response = await fetch(url);\n        if (!response.ok) throw new Error('Error Getting Data');\n        let result = await response.json();\n        setData(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(fail);\n      }\n    };\n  });\n};\n_s(useFetch, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\nexport default FC;","map":{"version":3,"names":["React","useState","useEffect","useFetch","url","_s","data","setData","error","setError","loading","setLoading","fetchData","response","fetch","ok","Error","result","json","fail","FC"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    let [data, setData] = useState(null)\r\n    let [error, setError] = useState(null)\r\n    let [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let response = await fetch(url)\r\n                if (!response.ok) throw new Error('Error Getting Data')\r\n                let result = await response.json()\r\n                setData(result)\r\n            } catch (error) {\r\n                setError(error)\r\n            }finally{\r\n                setLoading(fail)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n}\r\nexport default FC;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpC,IAAI,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,IAAI,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QAC/B,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACvD,IAAIC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACU,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOT,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,SAAO;QACJG,UAAU,CAACQ,IAAI,CAAC;MACpB;IACJ,CAAC;EACL,CAAC,CAAC;AAIN,CAAC;AAAAd,EAAA,CAtBKF,QAAQ;AAuBd,eAAeiB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}