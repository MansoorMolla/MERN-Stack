{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FC = () => {\n  _s();\n  let [counter, setCounter] = useState(0);\n  let [effect, setEffect] = useState(0);\n  useEffect(() => {\n    console.log('These gets logged');\n  }, [e]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The current value of the Counter : \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCounter(++counter);\n      },\n      children: \"INC Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEffect(++effect);\n      },\n      children: \"INC Effect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FC, \"UvuSlIzmg/78WDE1zxks9Nbkdi0=\");\n_c = FC;\nexport default FC;\n\n// function FC() {\n//     return (\n//         <h1>These is react functional component</h1>\n//     )\n// }\n\n// export default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FC","_s","counter","setCounter","effect","setEffect","console","log","e","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["\r\nimport React, {useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst FC = () => {\r\n    let [counter, setCounter] = useState(0)\r\n    let [effect, setEffect] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        console.log('These gets logged');\r\n    },[e])\r\n\r\n    return( \r\n        <>\r\n        <h1>The current value of the Counter : {counter}</h1>\r\n        <button onClick={()=>{setCounter(++counter)}}>INC Counter</button>\r\n        <button onClick={()=>{setEffect(++effect)}}>INC Effect</button>\r\n        </>\r\n    )\r\n}\r\nexport default FC;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function FC() {\r\n//     return (\r\n//         <h1>These is react functional component</h1>\r\n//     )\r\n// }\r\n\r\n// export default FC;\r\n\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACb,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,IAAI,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAI;IACVY,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC,CAAC,EAAC,CAACC,CAAC,CAAC,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA;MAAAY,QAAA,GAAI,qCAAmC,EAACP,OAAO;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrDhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAI;QAACX,UAAU,CAAC,EAAED,OAAO,CAAC;MAAA,CAAE;MAAAO,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClEhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAI;QAACT,SAAS,CAAC,EAAED,MAAM,CAAC;MAAA,CAAE;MAAAK,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7D,CAAC;AAEX,CAAC;AAAAZ,EAAA,CAfKD,EAAE;AAAAe,EAAA,GAAFf,EAAE;AAgBR,eAAeA,EAAE;;AAoBjB;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}