{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n//useState, useReducer, useRef, useContext, useEffect, useCallback, useMemo\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FC = () => {\n  _s();\n  let [count, setCount] = useState(0);\n  let [effect, setEffect] = us(0);\n  useEffect(() => {\n    console.log('These gets logged based on dependency array');\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(++count);\n      },\n      children: \"INC count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEffect(++effect);\n      },\n      children: \"INC effect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FC, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FC","_s","count","setCount","effect","setEffect","us","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["//useState, useReducer, useRef, useContext, useEffect, useCallback, useMemo\r\n\r\nimport React, {useState, useEffect} from \"react\";\r\nconst FC = () => {\r\n   let [count, setCount] = useState(0)\r\n   let [effect, setEffect] = us(0)\r\n   useEffect(()=>{\r\n    console.log('These gets logged based on dependency array')\r\n   })\r\n    return(\r\n        <>\r\n        <h1>Count : {count}</h1>\r\n        <button onClick={()=>{setCount(++count)}}>INC count</button>\r\n        <button onClick={()=>{setEffect(++effect)}}>INC effect</button>\r\n        </>\r\n    )\r\n}\r\nexport default FC;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,MAAMC,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC;EAC/BX,SAAS,CAAC,MAAI;IACbY,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EAC3D,CAAC,CAAC;EACD,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA;MAAAY,QAAA,GAAI,UAAQ,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAI;QAACX,QAAQ,CAAC,EAAED,KAAK,CAAC;MAAA,CAAE;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAI;QAACT,SAAS,CAAC,EAAED,MAAM,CAAC;MAAA,CAAE;MAAAK,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7D,CAAC;AAEX,CAAC;AAAAZ,EAAA,CAbKD,EAAE;AAAAe,EAAA,GAAFf,EAAE;AAcR,eAAeA,EAAE;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}