{"ast":null,"code":"var _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// useCallback hook performence optimization technique\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n// Todo list\n\nimport React, { useState, useEffect } from \"react\";\nconst FC = url => {\n  _s();\n  let [data, setData] = useState('');\n  let [error, setError] = useState('');\n  let [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await fetch(url);\n        if (!Response.ok) throw new Error('Error occured');\n        const response = await result.json();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(FC, \"IN1/nOimvtD/d49bClhRgjZT/co=\");\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["React","useState","useEffect","FC","url","_s","data","setData","error","setError","loading","setLoading","fetchData","result","fetch","Response","ok","Error","response","json","message","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// useCallback hook performence optimization technique\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n// Todo list\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst FC = (url) => {\r\n    let [data, setData] = useState('')\r\n    let [error, setError] = useState('')\r\n    let [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(url)\r\n                if(!Response.ok) throw new Error('Error occured')\r\n                const response = await result.json()\r\n            } catch (error) {\r\n                setError(error.message)\r\n            }finally{\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    },[url])\r\n\r\n    return (\r\n        {data,loading,error}\r\n    )\r\n}\r\nexport default FC"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,EAAE,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAChB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAI,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QAC/B,IAAG,CAACW,QAAQ,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;QACjD,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACM,IAAI,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOX,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MAC3B,CAAC,SAAO;QACJT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,CAACR,GAAG,CAAC,CAAC;EAER,OACI;IAACE,IAAI;IAACI,OAAO;IAACF;EAAK,CAAC;AAE5B,CAAC;AAAAH,EAAA,CAvBKF,EAAE;AAAAkB,EAAA,GAAFlB,EAAE;AAwBR,eAAeA,EAAE;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}