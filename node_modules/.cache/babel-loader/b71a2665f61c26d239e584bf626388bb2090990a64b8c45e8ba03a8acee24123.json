{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FC() {\n  _s();\n  const [count, setCount] = useState(0);\n  console.log(\"%cðŸ”¥ Parent rendered!\", \"color: orange; font-weight: bold;\");\n\n  // Using useCallback to memoize the function\n  const handleButtonClick = useCallback(() => {\n    alert(\"Button clicked in the Child component!\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid orange\",\n      padding: \"10px\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parent Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      onButtonClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n// React.memo prevents re-rendering unless props change\n_s(FC, \"2Ht9fInBKg24+Na4mqH5HJbypLA=\");\n_c = FC;\nconst Child = /*#__PURE__*/React.memo(_c2 = ({\n  onButtonClick\n}) => {\n  console.log(\"%câœ… Child rendered!\", \"color: green; font-weight: bold;\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid green\",\n      padding: \"10px\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Child Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Child;\nexport default FC;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FC\");\n$RefreshReg$(_c2, \"Child$React.memo\");\n$RefreshReg$(_c3, \"Child\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","FC","_s","count","setCount","console","log","handleButtonClick","alert","style","border","padding","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Child","onButtonClick","_c","memo","_c2","_c3","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n\r\n\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nfunction FC() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  console.log(\"%cðŸ”¥ Parent rendered!\", \"color: orange; font-weight: bold;\");\r\n\r\n  // Using useCallback to memoize the function\r\n  const handleButtonClick = useCallback(() => {\r\n    alert(\"Button clicked in the Child component!\");\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid orange\", padding: \"10px\", margin: \"10px\" }}>\r\n      <h1>Parent Component</h1>\r\n      <p>Count: {count}</p>\r\n      <button onClick={() => setCount(count + 1)}>Increment Count</button>\r\n      <br />\r\n      {/* Passing the memoized function as a prop */}\r\n      <Child onButtonClick={handleButtonClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// React.memo prevents re-rendering unless props change\r\nconst Child = React.memo(({ onButtonClick }) => {\r\n  console.log(\"%câœ… Child rendered!\", \"color: green; font-weight: bold;\");\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid green\", padding: \"10px\", margin: \"10px\" }}>\r\n      <h2>Child Component</h2>\r\n      <button onClick={onButtonClick}>Click Me</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FC;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErCQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,mCAAmC,CAAC;;EAEzE;EACA,MAAMC,iBAAiB,GAAGT,WAAW,CAAC,MAAM;IAC1CU,KAAK,CAAC,wCAAwC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKS,KAAK,EAAE;MAAEC,MAAM,EAAE,kBAAkB;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC1Eb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAAa,QAAA,GAAG,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENjB,OAAA,CAACmB,KAAK;MAACC,aAAa,EAAEb;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;;AAEA;AAAAf,EAAA,CAtBSD,EAAE;AAAAoB,EAAA,GAAFpB,EAAE;AAuBX,MAAMkB,KAAK,gBAAGvB,KAAK,CAAC0B,IAAI,CAAAC,GAAA,GAACA,CAAC;EAAEH;AAAc,CAAC,KAAK;EAC9Cf,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,kCAAkC,CAAC;EAEtE,oBACEN,OAAA;IAAKS,KAAK,EAAE;MAAEC,MAAM,EAAE,iBAAiB;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACzEb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAQkB,OAAO,EAAEE,aAAc;MAAAP,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC,CAAC;AAACO,GAAA,GATGL,KAAK;AAWX,eAAelB,EAAE;AAAC,IAAAoB,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}