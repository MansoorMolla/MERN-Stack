{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n// useCallback hook performence optimization technique\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducerFunction = (state, action) => {\n  if (action.type === 'RES') return 0;\n  return state + action;\n};\nconst FC = () => {\n  _s();\n  let [current, dispatch] = useReducer(reducerFunction, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count:\", current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: 'RES'\n        });\n      },\n      children: \"INC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(FC, \"tIXmn0Ci2vcs9LlESLyAyLVY3NU=\");\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","reducerFunction","state","action","type","FC","_s","current","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n// useCallback hook performence optimization technique\r\n\r\nimport React,{useReducer} from \"react\";\r\n\r\n\r\nconst reducerFunction = (state, action) => {\r\n  if(action.type === 'RES') return 0;\r\n  return state + action;\r\n}\r\n\r\nconst FC = () => {\r\n  let [current, dispatch] = useReducer(reducerFunction, 0)\r\n  return(\r\n    <>\r\n    <h1>Count:{current}</h1>\r\n    <button onClick={()=>{dispatch({type:'RES'})}}>INC</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FC;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGvC,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE,OAAO,CAAC;EAClC,OAAOF,KAAK,GAAGC,MAAM;AACvB,CAAC;AAED,MAAME,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACK,eAAe,EAAE,CAAC,CAAC;EACxD,oBACEH,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAAW,QAAA,GAAI,QAAM,EAACF,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAI;QAACN,QAAQ,CAAC;UAACJ,IAAI,EAAC;QAAK,CAAC,CAAC;MAAA,CAAE;MAAAK,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACzD,CAAC;AAEP,CAAC;AAAAP,EAAA,CARKD,EAAE;AAAAU,EAAA,GAAFV,EAAE;AAUR,eAAeA,EAAE;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}