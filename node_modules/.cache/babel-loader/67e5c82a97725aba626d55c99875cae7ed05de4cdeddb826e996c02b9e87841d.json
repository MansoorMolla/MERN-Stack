{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SH20313140\\\\Desktop\\\\Fullstack\\\\CRASHCOURSE_MERN\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// function FC() {\n//     return (\n//         <h1>These is react functional component</h1>\n//     )\n// }\n\n// export default FC;\n\nconst FC = () => {\n  const token = {\n    name: 'Mansoor',\n    isLogged: true\n  };\n  let message;\n  if (token.isLogged) {\n    message = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [token.name, \" is logged in successfully\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this);\n  } else {\n    message = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [token.name, \" please login first\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: message\n  }, void 0, false);\n};\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["FC","token","name","isLogged","message","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","_c","$RefreshReg$"],"sources":["C:/Users/SH20313140/Desktop/Fullstack/CRASHCOURSE_MERN/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// function FC() {\r\n//     return (\r\n//         <h1>These is react functional component</h1>\r\n//     )\r\n// }\r\n\r\n// export default FC;\r\n\r\nconst FC = () =>{\r\n    const token = {\r\n        name: 'Mansoor',\r\n        isLogged: true\r\n    }\r\n\r\n    let message;\r\n    if(token.isLogged){\r\n        message = <h1>{token.name} is logged in successfully</h1>\r\n    }else{\r\n        message = <h1>{token.name} please login first</h1>\r\n    }\r\n    return(\r\n        <>\r\n       {message}\r\n        </>\r\n    )\r\n}\r\nexport default FC;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMA,EAAE,GAAGA,CAAA,KAAK;EACZ,MAAMC,KAAK,GAAG;IACVC,IAAI,EAAE,SAAS;IACfC,QAAQ,EAAE;EACd,CAAC;EAED,IAAIC,OAAO;EACX,IAAGH,KAAK,CAACE,QAAQ,EAAC;IACdC,OAAO,gBAAGC,OAAA;MAAAC,QAAA,GAAKL,KAAK,CAACC,IAAI,EAAC,4BAA0B;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7D,CAAC,MAAI;IACDN,OAAO,gBAAGC,OAAA;MAAAC,QAAA,GAAKL,KAAK,CAACC,IAAI,EAAC,qBAAmB;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtD;EACA,oBACIL,OAAA,CAAAM,SAAA;IAAAL,QAAA,EACAF;EAAO,gBACL,CAAC;AAEX,CAAC;AAAAQ,EAAA,GAjBKZ,EAAE;AAkBR,eAAeA,EAAE;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}