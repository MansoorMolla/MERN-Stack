{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// useCallback hook performence optimization technique\n// controlled and uncontrolled component\n// toggle\n// api call axios and useeffect (ajax call)\n// lazy loading\n// create form and show form data\n// custom hook (api calling)\n// Todo list\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersistValueExample = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const prevCountRef = useRef(); // Persisted across renders\n  let resetEveryRender = 0; // Resets on every render\n\n  useEffect(() => {\n    prevCountRef.current = count; // Updates after every render\n  }, [count]);\n  const handleClick = () => {\n    setCount(count + 1); // Causes re-render\n  };\n\n  resetEveryRender++; // Will reset back to 0 on every render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Current Count (state): \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Previous Count (useRef): \", prevCountRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Resetting Value (normal var): \", resetEveryRender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PersistValueExample, \"ASxKwvowIOcjCsM7q0Ue0R+dvXc=\");\n_c = PersistValueExample;\nexport default PersistValueExample;\nvar _c;\n$RefreshReg$(_c, \"PersistValueExample\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PersistValueExample","_s","count","setCount","prevCountRef","resetEveryRender","current","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// useCallback hook performence optimization technique\r\n// controlled and uncontrolled component\r\n// toggle\r\n// api call axios and useeffect (ajax call)\r\n// lazy loading\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// Todo list\r\n\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst PersistValueExample = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const prevCountRef = useRef();         // Persisted across renders\r\n  let resetEveryRender = 0;              // Resets on every render\r\n\r\n  useEffect(() => {\r\n    prevCountRef.current = count; // Updates after every render\r\n  }, [count]);\r\n\r\n  const handleClick = () => {\r\n    setCount(count + 1); // Causes re-render\r\n  };\r\n\r\n  resetEveryRender++; // Will reset back to 0 on every render\r\n\r\n  return (\r\n    <div>\r\n      <h3>Current Count (state): {count}</h3>\r\n      <h4>Previous Count (useRef): {prevCountRef.current}</h4>\r\n      <h4>Resetting Value (normal var): {resetEveryRender}</h4>\r\n      <button onClick={handleClick}>Increment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersistValueExample;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,YAAY,GAAGR,MAAM,CAAC,CAAC,CAAC,CAAS;EACvC,IAAIS,gBAAgB,GAAG,CAAC,CAAC,CAAc;;EAEvCR,SAAS,CAAC,MAAM;IACdO,YAAY,CAACE,OAAO,GAAGJ,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;;EAEDG,gBAAgB,EAAE,CAAC,CAAC;;EAEpB,oBACEN,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,yBAAuB,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCb,OAAA;MAAAS,QAAA,GAAI,2BAAyB,EAACJ,YAAY,CAACE,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDb,OAAA;MAAAS,QAAA,GAAI,gCAA8B,EAACH,gBAAgB;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzDb,OAAA;MAAQc,OAAO,EAAEN,WAAY;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACX,EAAA,CAxBID,mBAAmB;AAAAc,EAAA,GAAnBd,mBAAmB;AA0BzB,eAAeA,mBAAmB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}