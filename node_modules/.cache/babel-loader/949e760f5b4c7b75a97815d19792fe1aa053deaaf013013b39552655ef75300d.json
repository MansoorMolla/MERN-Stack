{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SH20313140\\\\Desktop\\\\Fullstack\\\\CRASHCOURSE_MERN\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// function FC() {\n//     return (\n//         <h1>These is react functional component</h1>\n//     )\n// }\n\n// export default FC;\n\n// useState, useEffect, useReducer, useRef, Usecallback , usememo , useContext\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FC = () => {\n  _s();\n  let [count, updateCount] = useState(0);\n  let [dependency, updateDependency] = useState(0);\n  useEffect(() => {\n    console.log('These gets logged everytime when ');\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The current value of the counter is : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(FC, \"s0DuOy8SO5Xf0+RN5k2yCeng1Yw=\");\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FC","_s","count","updateCount","dependency","updateDependency","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SH20313140/Desktop/Fullstack/CRASHCOURSE_MERN/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// function FC() {\r\n//     return (\r\n//         <h1>These is react functional component</h1>\r\n//     )\r\n// }\r\n\r\n// export default FC;\r\n\r\n// useState, useEffect, useReducer, useRef, Usecallback , usememo , useContext\r\n\r\nimport React, {useEffect} from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst FC = () =>{\r\n    let [count, updateCount] = useState(0);\r\n    let [dependency, updateDependency] = useState(0);\r\n    useEffect(() => {\r\n        console.log('These gets logged everytime when ')\r\n    })\r\n    return(\r\n        <>\r\n        <h1>The current value of the counter is : {count}</h1>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FC;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,EAAE,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACZ,IAAI,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACtC,IAAI,CAACS,UAAU,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZY,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EACpD,CAAC,CAAC;EACF,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACAX,OAAA;MAAAW,QAAA,GAAI,wCAAsC,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAEpD,CAAC;AAEX,CAAC;AAAAX,EAAA,CAZKD,EAAE;AAAAa,EAAA,GAAFb,EAAE;AAcR,eAAeA,EAAE;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}