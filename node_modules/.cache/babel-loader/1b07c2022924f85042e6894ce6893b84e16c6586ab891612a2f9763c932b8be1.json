{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// useCallback hook performence optimization technique\n// controlled and uncontrolled component\n// toggle\n// api call axios and useeffect (ajax call)\n// lazy loading\n// create form and show form data\n// custom hook (api calling)\n// Todo list\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersistVsReset = () => {\n  _s();\n  console.log(\"Component Rendered\");\n  const [count, setCount] = useState(0);\n  const prevCountRef = useRef();\n  const [resetState, setResetState] = useState(0); // We'll reset this manually\n\n  useEffect(() => {\n    prevCountRef.current = count;\n\n    // Reset the resetState to 0 after render to simulate reset behavior\n    setResetState(0);\n  }, [count]);\n  const handleClick = () => {\n    setCount(count + 1);\n    setResetState(prev => prev + 1); // This gets reset in useEffect after every render\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Component Rendered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Current Count (useState): \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Previous Count (useRef): \", prevCountRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Resetting Value (useState forcibly reset): \", resetState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PersistVsReset, \"S2t0xQfpnyseaxlsowfRFo/xQC0=\");\n_c = PersistVsReset;\nexport default PersistVsReset;\nvar _c;\n$RefreshReg$(_c, \"PersistVsReset\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PersistVsReset","_s","console","log","count","setCount","prevCountRef","resetState","setResetState","current","handleClick","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// useCallback hook performence optimization technique\r\n// controlled and uncontrolled component\r\n// toggle\r\n// api call axios and useeffect (ajax call)\r\n// lazy loading\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// Todo list\r\n\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst PersistVsReset = () => {\r\n  console.log(\"Component Rendered\");\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const prevCountRef = useRef();\r\n  const [resetState, setResetState] = useState(0); // We'll reset this manually\r\n\r\n  useEffect(() => {\r\n    prevCountRef.current = count;\r\n\r\n    // Reset the resetState to 0 after render to simulate reset behavior\r\n    setResetState(0);\r\n  }, [count]);\r\n\r\n  const handleClick = () => {\r\n    setCount(count + 1);\r\n    setResetState(prev => prev + 1); // This gets reset in useEffect after every render\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Component Rendered</h3>\r\n      <h4>Current Count (useState): {count}</h4>\r\n      <h4>Previous Count (useRef): {prevCountRef.current}</h4>\r\n      <h4>Resetting Value (useState forcibly reset): {resetState}</h4>\r\n      <button onClick={handleClick}>Increment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersistVsReset;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAEjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,YAAY,GAAGV,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDE,SAAS,CAAC,MAAM;IACdS,YAAY,CAACG,OAAO,GAAGL,KAAK;;IAE5B;IACAI,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBI,aAAa,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,GAAI,4BAA0B,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CjB,OAAA;MAAAa,QAAA,GAAI,2BAAyB,EAACN,YAAY,CAACG,OAAO;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDjB,OAAA;MAAAa,QAAA,GAAI,6CAA2C,EAACL,UAAU;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChEjB,OAAA;MAAQkB,OAAO,EAAEP,WAAY;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BID,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}