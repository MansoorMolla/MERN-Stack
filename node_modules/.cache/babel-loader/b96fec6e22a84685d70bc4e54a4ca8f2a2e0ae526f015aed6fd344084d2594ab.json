{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Parent() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [otherState, setOtherState] = useState(false);\n  console.log(\"%cðŸ”¥ Parent rendered!\", \"color: orange; font-weight: bold;\");\n\n  // Memoized reset function using useCallback\n  const resetCount = useCallback(() => {\n    console.log(\"%cðŸ”„ Reset function called in Child!\", \"color: blue;\");\n    setCount(0); // Resets count\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid orange\",\n      padding: \"10px\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parent Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCount,\n      children: \"Reset (Parent)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      count: count,\n      onReset: resetCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOtherState(!otherState),\n      children: \"Toggle Other State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n// Child component receives `resetCount` function as prop\n_s(Parent, \"bGnBzykcvLo0cFiGg/ADS1IBxKE=\");\n_c = Parent;\nconst Child = /*#__PURE__*/React.memo(_c2 = ({\n  count,\n  onReset\n}) => {\n  console.log(\"%câœ… Child rendered!\", \"color: green; font-weight: bold;\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid green\",\n      padding: \"10px\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Child Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count in Child: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"Reset (Child)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Child;\nexport default Parent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Parent\");\n$RefreshReg$(_c2, \"Child$React.memo\");\n$RefreshReg$(_c3, \"Child\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Parent","_s","count","setCount","otherState","setOtherState","console","log","resetCount","style","border","padding","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Child","onReset","_c","memo","_c2","_c3","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n\r\n\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nfunction Parent() {\r\n  const [count, setCount] = useState(0);\r\n  const [otherState, setOtherState] = useState(false);\r\n\r\n  console.log(\"%cðŸ”¥ Parent rendered!\", \"color: orange; font-weight: bold;\");\r\n\r\n  // Memoized reset function using useCallback\r\n  const resetCount = useCallback(() => {\r\n    console.log(\"%cðŸ”„ Reset function called in Child!\", \"color: blue;\");\r\n    setCount(0); // Resets count\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid orange\", padding: \"10px\", margin: \"10px\" }}>\r\n      <h1>Parent Component</h1>\r\n      <p>Count: {count}</p>\r\n\r\n      {/* Increment and Reset Buttons */}\r\n      <button onClick={() => setCount(count + 1)}>Increment</button>\r\n      <button onClick={resetCount}>Reset (Parent)</button>\r\n\r\n      <br />\r\n      {/* Passing reset function to Child */}\r\n      <Child count={count} onReset={resetCount} />\r\n\r\n      {/* Triggering otherState change to observe function behavior */}\r\n      <button onClick={() => setOtherState(!otherState)}>\r\n        Toggle Other State\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Child component receives `resetCount` function as prop\r\nconst Child = React.memo(({ count, onReset }) => {\r\n  console.log(\"%câœ… Child rendered!\", \"color: green; font-weight: bold;\");\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid green\", padding: \"10px\", margin: \"10px\" }}>\r\n      <h2>Child Component</h2>\r\n      <p>Count in Child: {count}</p>\r\n      <button onClick={onReset}>Reset (Child)</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Parent;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}