{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// functional component, classs component\n// passing prop, default prop, prop check\n// conditional rendering( ternary operator, if, ampercend)\n// list and keys\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\n// controlled and uncontrolled component\n// api call axios and useeffect (ajax call)\n// create form and show form data\n// custom hook (api calling)\n// toggle\n// lazy loading\n\nimport React, { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Parent() {\n  _s();\n  console.log(\"Parent rendered\");\n\n  // Use useCallback to memoize the function\n  const handleButtonClick = useCallback(() => {\n    alert('Button clicked in the Child component!');\n  }, []); // No dependencies, so the function won't be recreated on every render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parent Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      onButtonClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// React.memo prevents the Child from re-rendering if props don't change\n_s(Parent, \"0yxMwxxfbeCouqvwVeOiezTwK+s=\");\n_c = Parent;\nconst Child = /*#__PURE__*/React.memo(_c2 = ({\n  onButtonClick\n}) => {\n  console.log(\"Child rendered\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Child Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Child;\nexport default Parent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Parent\");\n$RefreshReg$(_c2, \"Child$React.memo\");\n$RefreshReg$(_c3, \"Child\");","map":{"version":3,"names":["React","useCallback","jsxDEV","_jsxDEV","Parent","_s","console","log","handleButtonClick","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","Child","onButtonClick","_c","memo","_c2","onClick","_c3","$RefreshReg$"],"sources":["C:/Development/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// functional component, classs component\r\n// passing prop, default prop, prop check\r\n// conditional rendering( ternary operator, if, ampercend)\r\n// list and keys\r\n// useState, useReducer, useEffect, useRef, useContext, useCallback, useMemo\r\n// controlled and uncontrolled component\r\n// api call axios and useeffect (ajax call)\r\n// create form and show form data\r\n// custom hook (api calling)\r\n// toggle\r\n// lazy loading\r\n\r\n\r\nimport React, { useCallback } from 'react';\r\n\r\nfunction Parent() {\r\n  console.log(\"Parent rendered\");\r\n\r\n  // Use useCallback to memoize the function\r\n  const handleButtonClick = useCallback(() => {\r\n    alert('Button clicked in the Child component!');\r\n  }, []); // No dependencies, so the function won't be recreated on every render\r\n\r\n  return (\r\n    <div>\r\n      <h1>Parent Component</h1>\r\n      {/* Passing the memoized function as a prop */}\r\n      <Child onButtonClick={handleButtonClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// React.memo prevents the Child from re-rendering if props don't change\r\nconst Child = React.memo(({ onButtonClick }) => {\r\n  console.log(\"Child rendered\");\r\n\r\n  return (\r\n    <div>\r\n      <h2>Child Component</h2>\r\n      <button onClick={onButtonClick}>Click Me</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Parent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;;EAE9B;EACA,MAAMC,iBAAiB,GAAGP,WAAW,CAAC,MAAM;IAC1CQ,KAAK,CAAC,wCAAwC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBX,OAAA,CAACY,KAAK;MAACC,aAAa,EAAER;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;;AAEA;AAAAT,EAAA,CAjBSD,MAAM;AAAAa,EAAA,GAANb,MAAM;AAkBf,MAAMW,KAAK,gBAAGf,KAAK,CAACkB,IAAI,CAAAC,GAAA,GAACA,CAAC;EAAEH;AAAc,CAAC,KAAK;EAC9CV,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAE7B,oBACEJ,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBX,OAAA;MAAQiB,OAAO,EAAEJ,aAAc;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC,CAAC;AAACO,GAAA,GATGN,KAAK;AAWX,eAAeX,MAAM;AAAC,IAAAa,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}