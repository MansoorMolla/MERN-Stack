{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SH20313140\\\\Desktop\\\\Fullstack\\\\CRASHCOURSE_MERN\\\\Reactjs\\\\src\\\\components\\\\FunctionalComponent.js\",\n  _s = $RefreshSig$();\n// function FC() {\n//     return (\n//         <h1>These is react functional component</h1>\n//     )\n// }\n\nimport { useEffect, useReducer, useState } from \"react\";\n\n// export default FC;\n\n// hooks(useState, useeffect, usereducer,useref,usecontext,usecallback,usememo)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst updateFunction = (state, ac);\nconst FC = () => {\n  _s();\n  let [counter, disptach] = useReducer(updateFunction, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The current value of the counter is: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: disptach(+1),\n      children: \"INC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FC, \"keBnAF3H4BJEG2UJTdQjbYkUxjY=\");\n_c = FC;\nexport default FC;\nvar _c;\n$RefreshReg$(_c, \"FC\");","map":{"version":3,"names":["useEffect","useReducer","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","updateFunction","state","ac","FC","_s","counter","disptach","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SH20313140/Desktop/Fullstack/CRASHCOURSE_MERN/Reactjs/src/components/FunctionalComponent.js"],"sourcesContent":["// function FC() {\r\n//     return (\r\n//         <h1>These is react functional component</h1>\r\n//     )\r\n// }\r\n\r\nimport { useEffect, useReducer, useState } from \"react\";\r\n\r\n// export default FC;\r\n\r\n\r\n\r\n// hooks(useState, useeffect, usereducer,useref,usecontext,usecallback,usememo)\r\n\r\n\r\nconst updateFunction = (state, ac)\r\nconst FC = () =>{\r\n    let [counter, disptach] = useReducer(updateFunction, 0);\r\n    return(\r\n        <>\r\n        <h1>The current value of the counter is: {counter}</h1>\r\n        <button onClick={disptach(+1)}>INC</button>\r\n        </>\r\n    )\r\n}\r\nexport default FC;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAEvD;;AAIA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,cAAc,IAAIC,KAAK,EAAEC,EAAE,CAAC;AAClC,MAAMC,EAAE,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACZ,IAAI,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACM,cAAc,EAAE,CAAC,CAAC;EACvD,oBACIH,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACAV,OAAA;MAAAU,QAAA,GAAI,uCAAqC,EAACF,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvDd,OAAA;MAAQe,OAAO,EAAEN,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACzC,CAAC;AAEX,CAAC;AAAAP,EAAA,CARKD,EAAE;AAAAU,EAAA,GAAFV,EAAE;AASR,eAAeA,EAAE;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}